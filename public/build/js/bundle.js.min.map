{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","inputHiddenDias","inputHiddenHoras","terminoBusqueda","e","target","name","value","horaPrevia","classList","remove","Object","values","includes","async","baseUrl","window","BASE_URL","console","error","url","respuesta","fetch","resultados","listadoHoras","forEach","li","add","horasTomadas","map","resultado","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","addEventListener","seleccionarHora","obtenetHorasDisponibles","json","buscarEventos","ponentesInput","ponentes","ponentesFiltrados","arrayPonentes","ponente","nombre","trim","apellido","id","formatearPonentes","log","obtenerPonentes","length","expresion","RegExp","test","toLowerCase","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","textContent","tag","etiqueta","createElement","ondblclick","eliminarTag","appendChild","join","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function () {\r\n    const horas = document.querySelector('#horas');\r\n\r\n    if (horas) {\r\n        let busqueda = {\r\n            categoria_id: '',\r\n            dia: ''\r\n        };\r\n\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        const inputHiddenDias = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHoras = document.querySelector('[name=\"hora_id\"]');\r\n\r\n        categoria.addEventListener('change', terminoBusqueda);\r\n        dias.forEach(dia => dia.addEventListener('change', terminoBusqueda));\r\n\r\n        function terminoBusqueda(e) {\r\n            busqueda[e.target.name] = e.target.value;\r\n\r\n            inputHiddenHoras.value = '';\r\n             inputHiddenDias.value = '';\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n               if (horaPrevia) {\r\n        horaPrevia.classList.remove('horas__hora--seleccionada');\r\n    }\r\n\r\n            if (Object.values(busqueda).includes('')) {\r\n                return;\r\n            }\r\n\r\n            buscarEventos();\r\n        }\r\n\r\n        async function buscarEventos() {\r\n            const baseUrl = window.BASE_URL;\r\n            const { dia, categoria_id } = busqueda;\r\n\r\n            if (!baseUrl) {\r\n                console.error('BASE_URL no está definida');\r\n                return;\r\n            }\r\n\r\n            const url = `${baseUrl}api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n           // console.log('URL de consulta:', url);\r\n\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                \r\n\r\n                obtenetHorasDisponibles(resultado); \r\n            } catch (error) {\r\n                console.error('Error al buscar eventos:', error);\r\n            }\r\n        }\r\n\r\n        function obtenetHorasDisponibles(resultados) {\r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitado'));\r\n            \r\n\r\n            const horasTomadas = resultados.map(resultado => resultado.hora_id );\r\n            \r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n            const resultadoFinal = listadoHorasArray.filter(li => !horasTomadas.includes(li.dataset.horaId));\r\n\r\n          \r\n           resultadoFinal.forEach(li => li.classList.remove('horas__hora--deshabilitado')); \r\n\r\n\r\n\r\n\r\n\r\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitado)');\r\n           horasDisponibles.forEach(hora => hora.addEventListener('click',seleccionarHora))\r\n        }\r\n      function seleccionarHora(e) {\r\n    const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n\r\n    if (horaPrevia) {\r\n        horaPrevia.classList.remove('horas__hora--seleccionada');\r\n    }\r\n\r\n    e.target.classList.add('horas__hora--seleccionada');\r\n\r\n  \r\n    inputHiddenHoras.value = e.target.dataset.horaId;\r\n\r\n    inputHiddenDias.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n}\r\n\r\n    }\r\n})();\r\n","(function(){\r\n    const ponentesInput = document.querySelector('#ponentes');\r\n\r\n    if (ponentesInput) {\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n\r\n        obtenerPonentes();\r\n\r\n        ponentesInput.addEventListener('input', buscarPonentes);\r\n\r\n        async function obtenerPonentes(){\r\n            const baseUrl = window.BASE_URL;\r\n\r\n            if (!baseUrl) {\r\n                console.error('BASE_URL no está definida');\r\n                return;\r\n            }\r\n\r\n            const url = `${baseUrl}api/ponentes`;\r\n\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n\r\n                ponentes = formatearPonentes(resultado);\r\n                console.log('Ponentes formateados:', ponentes);\r\n            } catch (error) {\r\n                console.error('Error al buscar eventos:', error);\r\n            }\r\n        }\r\n\r\n        function formatearPonentes(arrayPonentes = []) {\r\n            return arrayPonentes.map(ponente => {\r\n                return {\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id\r\n                }\r\n            });\r\n        }\r\n\r\n        function buscarPonentes(e){\r\n            const busqueda = e.target.value;\r\n\r\n            if (busqueda.length > 3) {\r\n                const expresion = new RegExp(busqueda, 'i');\r\n                ponentesFiltrados = ponentes.filter(ponente =>\r\n                    expresion.test(ponente.nombre.toLowerCase())\r\n                );\r\n                \r\n            } else {\r\n                ponentesFiltrados = [];\r\n                \r\n            }\r\n        }\r\n    }\r\n})();\r\n","document.addEventListener('DOMContentLoaded', function () {\r\n  const tagsInput = document.querySelector('#tags__input');\r\n  const tagsDiv = document.querySelector('#tags');\r\n  const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n  let tags = [];\r\n\r\n  if (tagsInputHidden && tagsInputHidden.value !== '') {\r\n    tags = tagsInputHidden.value.split(',');\r\n    mostrarTags();\r\n  }\r\n\r\n  if (tagsInput) {\r\n    tagsInput.addEventListener('keypress', guardarTags);\r\n  }\r\n\r\n  function guardarTags(e) {\r\n    if (e.keyCode === 44) {\r\n      if (e.target.value.trim().length === 0) return;\r\n\r\n      e.preventDefault();\r\n      tags = [...tags, e.target.value.trim()];\r\n      tagsInput.value = '';\r\n\r\n      mostrarTags();\r\n    }\r\n  }\r\n\r\n  function mostrarTags() {\r\n    tagsDiv.textContent = '';\r\n    tags.forEach(tag => {\r\n      const etiqueta = document.createElement('LI');\r\n      etiqueta.classList.add('formulario__tag');\r\n      etiqueta.textContent = tag;\r\n      etiqueta.ondblclick = eliminarTag;\r\n      tagsDiv.appendChild(etiqueta);\r\n    });\r\n    actualizarInputHidden();\r\n  }\r\n\r\n  function eliminarTag(e) {\r\n    tags = tags.filter(tag => tag !== e.target.textContent);\r\n    mostrarTags();\r\n  }\r\n\r\n  function actualizarInputHidden() {\r\n    tagsInputHidden.value = tags.join(',');\r\n  }\r\n});\r\n"]}